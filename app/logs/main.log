Sat, 28 Apr 2018 16:12:32 +0000 string(26) "In CrudOperation, runbooks"
Sat, 28 Apr 2018 16:12:32 +0000 string(15) "Runbook Id is  "
Sat, 28 Apr 2018 16:12:32 +0000 string(5) "empty"
Sat, 28 Apr 2018 16:12:32 +0000 string(16) "Runbook SQL is  "
Sat, 28 Apr 2018 16:12:32 +0000 string(22) "select * from runbooks"
Sat, 28 Apr 2018 16:12:32 +0000 string(10) "Returning:"
Sat, 28 Apr 2018 16:12:32 +0000 string(141) "{"total":1,"records":[{"runbookid":"WFTasks","runbookname":"WF Tasks","runbookdescription":"Tasks that pertain to all workflows","recid":1}]}"
Sat, 28 Apr 2018 16:12:33 +0000 string(31) "In CrudOperation, task_runbooks"
Sat, 28 Apr 2018 16:12:33 +0000 string(23) "RunbookTaskRead SQL is "
Sat, 28 Apr 2018 16:12:33 +0000 string(96) "select taskname, taskorder from task_runbooks where runbookid = 'WFTasks' order by taskorder asc"
Sat, 28 Apr 2018 16:12:33 +0000 string(26) "RunbookTaskRead DB Error: "
Sat, 28 Apr 2018 16:12:33 +0000 string(0) ""
Sat, 28 Apr 2018 16:12:33 +0000 string(10) "Returning:"
Sat, 28 Apr 2018 16:12:33 +0000 string(527) "{"total":9,"records":[{"taskname":"VP Read Data","taskorder":"1","recid":1},{"taskname":"VP Email Task","taskorder":"2","recid":2},{"taskname":"VP Ping Device","taskorder":"3","recid":3},{"taskname":"VP Empty File","taskorder":"4","recid":4},{"taskname":"VP REST Query","taskorder":"5","recid":5},{"taskname":"VP DNS Device","taskorder":"6","recid":6},{"taskname":"VP Count File Rows","taskorder":"7","recid":7},{"taskname":"VP Write To File","taskorder":"8","recid":8},{"taskname":"VP MySQL Query","taskorder":"9","recid":9}]}"
Sat, 28 Apr 2018 16:12:33 +0000 string(23) "In CrudOperation, tasks"
Sat, 28 Apr 2018 16:12:48 +0000 string(27) "In CrudOperation, workflows"
Sat, 28 Apr 2018 16:12:48 +0000 string(36) "WorkFlowCreateUpdate: New Params are"
Sat, 28 Apr 2018 16:12:48 +0000 array(2) {
  ["workflowname"]=>
  string(10) "First Flow"
  ["workflowdata"]=>
  string(4973) "{"operators":{"start":{"top":20,"left":0,"properties":{"objecttype":"startnode","class":"flowchart-start-operator","runbookid":"","runbookname":"","title":"Start","inputs":{},"outputs":{"output_1":{"label":"Begin"}}}},"end":{"top":40,"left":1020,"properties":{"objecttype":"endnode","class":"flowchart-end-operator","runbookid":"","runbookname":"","title":"Stop","inputs":{"input_1":{"label":"End"}},"outputs":{}}},"task4":{"top":60,"left":760,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"End While","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Write To File","parameters":"{\n\"filename\":\"/var/www/html/pilot/tmp/files/endedwhileloop.txt\",\n\"data\":\"while loop is completed.  made it to end.\"\n}","runbookname":"WF Tasks","runbookid":"WFTasks"}}},"task3":{"top":320,"left":680,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"Break While","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Write To File","parameters":"{\n\"filename\":\"/var/www/html/pilot/tmp/files/breakwhile.txt\",\n\"data\":\"Break while loop here\"\n}\n","runbookname":"WF Tasks","runbookid":"WFTasks"}}},"route:break1":{"top":300,"left":460,"properties":{"objecttype":"route:break","class":"flowchart-route-operator-break","title":"Break","inputs":{"input_1":{"label":"In","conntype":"input"}},"outputs":{"output_1":{"label":"Out","conntype":"output"}},"loopid":"route:while1"}},"route:continue1":{"top":180,"left":660,"properties":{"objecttype":"route:continue","class":"flowchart-route-operator-continue","title":"Continue","inputs":{"input_1":{"label":"In","conntype":"input"}},"outputs":{"output_1":{"label":"Out","conntype":"output"}},"loopid":"route:while1"}},"task1":{"top":80,"left":220,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"Ping Device","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Ping Device","parameters":"{\n\"host\":\"localhost\"\n}","runbookname":"WF Tasks","runbookid":"WFTasks"}}},"route:while1":{"top":160,"left":40,"properties":{"objecttype":"route:while","class":"flowchart-route-operator","title":"While count < 6","inputs":{"input_1":{"conntype":"input","label":"In"}},"outputs":{"output_1":{"conntype":"output","label":"Out","parameter":"counter","comparison":{"id":"<","text":"<"},"value":"6","increment":"1"}},"loopid":"route:while1"}},"route:if-else1":{"top":200,"left":280,"properties":{"objecttype":"route:if-else","class":"flowchart-route-operator","title":"If Else","inputs":{"input_1":{"conntype":"input","label":"In"}},"outputs":{"output_1":{"conntype":"output","label":"Alive","parameter":"status","comparison":"=","value":"alive"},"output_2":{"conntype":"output","label":"Not Alive","parameter":"status","comparison":"=","value":"unreachable"}}}},"task2":{"top":100,"left":460,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"Log Pings","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Write To File","parameters":"{\n\"filename\":\"/var/www/html/pilot/tmp/files/LoopPing.txt\",\n\"data\":\"Pinged %host% is %status% %counter% times\"\n}\n","runbookname":"WF Tasks","runbookid":"WFTasks"}}}},"links":{"0":{"fromOperator":"route:break1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task3","toConnector":"input_1","toSubConnector":0},"1":{"fromOperator":"route:if-else1","fromConnector":"output_2","fromSubConnector":0,"toOperator":"route:break1","toConnector":"input_1","toSubConnector":0},"2":{"fromOperator":"task1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"route:if-else1","toConnector":"input_1","toSubConnector":0},"3":{"fromOperator":"task3","fromConnector":"output_1","fromSubConnector":0,"toOperator":"end","toConnector":"input_1","toSubConnector":0},"4":{"fromOperator":"route:continue1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task4","toConnector":"input_1","toSubConnector":0},"5":{"fromOperator":"route:if-else1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task2","toConnector":"input_1","toSubConnector":0},"6":{"fromOperator":"start","fromConnector":"output_1","fromSubConnector":0,"toOperator":"route:while1","toConnector":"input_1","toSubConnector":0},"7":{"fromOperator":"route:while1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task1","toConnector":"input_1","toSubConnector":0},"8":{"fromOperator":"task2","fromConnector":"output_1","fromSubConnector":0,"toOperator":"route:continue1","toConnector":"input_1","toSubConnector":0},"9":{"fromOperator":"task4","fromConnector":"output_1","fromSubConnector":0,"toOperator":"end","toConnector":"input_1","toSubConnector":0}},"operatorTypes":{}}"
}
Sat, 28 Apr 2018 16:12:48 +0000 string(43) "Schedule is * * * * * and status is enabled"
Sat, 28 Apr 2018 16:12:48 +0000 string(31) "WorkFlowCreateUpdate DB Error: "
Sat, 28 Apr 2018 16:12:48 +0000 int(0)
Sat, 28 Apr 2018 16:12:48 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:10 +0000 string(27) "In CrudOperation, workflows"
Sat, 28 Apr 2018 16:13:10 +0000 string(36) "WorkFlowCreateUpdate: New Params are"
Sat, 28 Apr 2018 16:13:10 +0000 array(2) {
  ["workflowname"]=>
  string(10) "First Flow"
  ["workflowdata"]=>
  string(4973) "{"operators":{"start":{"top":20,"left":0,"properties":{"objecttype":"startnode","class":"flowchart-start-operator","runbookid":"","runbookname":"","title":"Start","inputs":{},"outputs":{"output_1":{"label":"Begin"}}}},"end":{"top":40,"left":1020,"properties":{"objecttype":"endnode","class":"flowchart-end-operator","runbookid":"","runbookname":"","title":"Stop","inputs":{"input_1":{"label":"End"}},"outputs":{}}},"task4":{"top":60,"left":760,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"End While","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Write To File","parameters":"{\n\"filename\":\"/var/www/html/pilot/tmp/files/endedwhileloop.txt\",\n\"data\":\"while loop is completed.  made it to end.\"\n}","runbookname":"WF Tasks","runbookid":"WFTasks"}}},"task3":{"top":320,"left":680,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"Break While","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Write To File","parameters":"{\n\"filename\":\"/var/www/html/pilot/tmp/files/breakwhile.txt\",\n\"data\":\"Break while loop here\"\n}\n","runbookname":"WF Tasks","runbookid":"WFTasks"}}},"route:break1":{"top":300,"left":460,"properties":{"objecttype":"route:break","class":"flowchart-route-operator-break","title":"Break","inputs":{"input_1":{"label":"In","conntype":"input"}},"outputs":{"output_1":{"label":"Out","conntype":"output"}},"loopid":"route:while1"}},"route:continue1":{"top":180,"left":660,"properties":{"objecttype":"route:continue","class":"flowchart-route-operator-continue","title":"Continue","inputs":{"input_1":{"label":"In","conntype":"input"}},"outputs":{"output_1":{"label":"Out","conntype":"output"}},"loopid":"route:while1"}},"task1":{"top":80,"left":220,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"Ping Device","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Ping Device","parameters":"{\n\"host\":\"localhost\"\n}","runbookname":"WF Tasks","runbookid":"WFTasks"}}},"route:while1":{"top":160,"left":40,"properties":{"objecttype":"route:while","class":"flowchart-route-operator","title":"While count < 6","inputs":{"input_1":{"conntype":"input","label":"In"}},"outputs":{"output_1":{"conntype":"output","label":"Out","parameter":"counter","comparison":{"id":"<","text":"<"},"value":"6","increment":"1"}},"loopid":"route:while1"}},"route:if-else1":{"top":200,"left":280,"properties":{"objecttype":"route:if-else","class":"flowchart-route-operator","title":"If Else","inputs":{"input_1":{"conntype":"input","label":"In"}},"outputs":{"output_1":{"conntype":"output","label":"Alive","parameter":"status","comparison":"=","value":"alive"},"output_2":{"conntype":"output","label":"Not Alive","parameter":"status","comparison":"=","value":"unreachable"}}}},"task2":{"top":100,"left":460,"properties":{"objecttype":"task","class":"flowchart-task-operator","runbookid":"","runbookname":"","title":"Log Pings","inputs":{"input_1":{"label":"In"}},"outputs":{"output_1":{"label":"Out"}},"task":{"taskname":"VP Write To File","parameters":"{\n\"filename\":\"/var/www/html/pilot/tmp/files/LoopPing.txt\",\n\"data\":\"Pinged %host% is %status% %counter% times\"\n}\n","runbookname":"WF Tasks","runbookid":"WFTasks"}}}},"links":{"0":{"fromOperator":"route:break1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task3","toConnector":"input_1","toSubConnector":0},"1":{"fromOperator":"route:if-else1","fromConnector":"output_2","fromSubConnector":0,"toOperator":"route:break1","toConnector":"input_1","toSubConnector":0},"2":{"fromOperator":"task1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"route:if-else1","toConnector":"input_1","toSubConnector":0},"3":{"fromOperator":"task3","fromConnector":"output_1","fromSubConnector":0,"toOperator":"end","toConnector":"input_1","toSubConnector":0},"4":{"fromOperator":"route:continue1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task4","toConnector":"input_1","toSubConnector":0},"5":{"fromOperator":"route:if-else1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task2","toConnector":"input_1","toSubConnector":0},"6":{"fromOperator":"start","fromConnector":"output_1","fromSubConnector":0,"toOperator":"route:while1","toConnector":"input_1","toSubConnector":0},"7":{"fromOperator":"route:while1","fromConnector":"output_1","fromSubConnector":0,"toOperator":"task1","toConnector":"input_1","toSubConnector":0},"8":{"fromOperator":"task2","fromConnector":"output_1","fromSubConnector":0,"toOperator":"route:continue1","toConnector":"input_1","toSubConnector":0},"9":{"fromOperator":"task4","fromConnector":"output_1","fromSubConnector":0,"toOperator":"end","toConnector":"input_1","toSubConnector":0}},"operatorTypes":{}}"
}
Sat, 28 Apr 2018 16:13:10 +0000 string(43) "Schedule is * * * * * and status is enabled"
Sat, 28 Apr 2018 16:13:10 +0000 string(31) "WorkFlowCreateUpdate DB Error: "
Sat, 28 Apr 2018 16:13:10 +0000 int(0)
Sat, 28 Apr 2018 16:13:10 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:13 +0000 string(34) "In CrudOperation, workflowschedule"
Sat, 28 Apr 2018 16:13:13 +0000 string(28) "WorkFlowScheduleRead PARAMS "
Sat, 28 Apr 2018 16:13:13 +0000 array(1) {
  ["workflowname"]=>
  string(10) "First Flow"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(33) "In CrudOperation, workflowexecute"
Sat, 28 Apr 2018 16:13:24 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:13:24 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:13:24 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:13:24 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:13:24 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:24 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:13:24 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:13:24 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:13:24 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:13:24 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:13:24 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:24 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:24 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:24"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "MCmgUkzK1T6aenF"
  ["taskpid"]=>
  int(31608)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 int(1)
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:13:24 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:13:24 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:24 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:24"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "MCmgUkzK1T6aenF"
  ["tasktime"]=>
  float(0.072371959686279)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 int(1)
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:13:24 +0000 object(stdClass)#538 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:13:24 +0000 string(6) "status"
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:13:24 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:13:24 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:13:24 +0000 object(stdClass)#538 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:13:24 +0000 string(6) "status"
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:13:24 +0000 string(388) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged %localhost% is %alive% %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:13:24 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:13:24 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:13:24 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:13:24 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:24 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:13:24 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:13:24 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:13:24 +0000 string(119) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged %localhost% is %alive% %counter% times"}"
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:13:24 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:13:24 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:24 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:24 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:25"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "kbIs9W3m5DBhJeB"
  ["taskpid"]=>
  int(31613)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 int(1)
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:13:24 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:13:24 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:24 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:25"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "kbIs9W3m5DBhJeB"
  ["tasktime"]=>
  float(0.027946949005127)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 int(1)
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 string(302) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"localhost":"locallocalhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:13:24 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:13:24 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:13:24 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:13:24 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:13:24 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:24 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:13:24 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:13:24 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:13:24 +0000 string(30) "{"localhost":"locallocalhost"}"
Sat, 28 Apr 2018 16:13:24 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:13:24 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:13:24 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:24 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:24 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:25"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "r0PnzhnP7uhCvzd"
  ["taskpid"]=>
  int(31618)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:24 +0000 int(1)
Sat, 28 Apr 2018 16:13:24 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:13:25 +0000 string(95) "output is "{\"status\":\"unreachable\",\"host\":\"\"}"
error is "Unknown option: localhost\n"

"
Sat, 28 Apr 2018 16:13:25 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:25 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:25"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "r0PnzhnP7uhCvzd"
  ["tasktime"]=>
  float(0.04271388053894)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(34) "{"status":"unreachable","host":""}"
  ["taskerror"]=>
  string(26) "Unknown option: localhost
"
}
Sat, 28 Apr 2018 16:13:25 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 int(1)
Sat, 28 Apr 2018 16:13:25 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:13:25 +0000 object(stdClass)#1166 (2) {
  ["status"]=>
  string(11) "unreachable"
  ["host"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:13:25 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:13:25 +0000 string(6) "status"
Sat, 28 Apr 2018 16:13:25 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:13:25 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:13:25 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:13:25 +0000 object(stdClass)#1166 (2) {
  ["status"]=>
  string(11) "unreachable"
  ["host"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:13:25 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:13:25 +0000 string(6) "status"
Sat, 28 Apr 2018 16:13:25 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:13:25 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:13:25 +0000 string(366) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/breakwhile.txt",
"data":"Break while loop here"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:13:25 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:13:25 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:13:25 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:13:25 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:13:25 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:13:25 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:13:25 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:13:25 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:25 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:13:25 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:13:25 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:13:25 +0000 string(97) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/breakwhile.txt","data":"Break while loop here"}"
Sat, 28 Apr 2018 16:13:25 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:13:25 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:13:25 +0000 string(2) "

"
Sat, 28 Apr 2018 16:13:25 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:25 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:25"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "7WHSfvv1ITZQmYE"
  ["taskpid"]=>
  int(31623)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:13:25 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 int(1)
Sat, 28 Apr 2018 16:13:25 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:13:25 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:13:25 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:13:25 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:13:25"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "7WHSfvv1ITZQmYE"
  ["tasktime"]=>
  float(0.028561115264893)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:13:25 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 int(1)
Sat, 28 Apr 2018 16:13:25 +0000 string(0) ""
Sat, 28 Apr 2018 16:13:25 +0000 string(38) "START WORKFLOW TIME IS 1524932004.0726"
Sat, 28 Apr 2018 16:13:25 +0000 string(37) "STOP WORKFLOW TIME IS 1524932005.3522"
Sat, 28 Apr 2018 16:13:25 +0000 string(37) "TOTAL WORKFLOW TIME IS 1.279571056366"
Sat, 28 Apr 2018 16:17:11 +0000 string(34) "In CrudOperation, workflowschedule"
Sat, 28 Apr 2018 16:17:11 +0000 string(28) "WorkFlowScheduleRead PARAMS "
Sat, 28 Apr 2018 16:17:11 +0000 array(1) {
  ["workflowname"]=>
  string(10) "First Flow"
}
Sat, 28 Apr 2018 16:17:15 +0000 string(33) "In CrudOperation, workflowexecute"
Sat, 28 Apr 2018 16:17:15 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:15 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:15 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:15 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:15 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:15 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:15 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:15 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:15 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:15 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:15 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:15 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:15 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:15 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:15 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:15 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:15 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:15 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:16"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "YNfc9dkWzI7J8Wu"
  ["taskpid"]=>
  int(32061)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:15 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:15 +0000 int(1)
Sat, 28 Apr 2018 16:17:15 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:15 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:15 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:15 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:15 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:16"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "YNfc9dkWzI7J8Wu"
  ["tasktime"]=>
  float(0.042171001434326)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:16 +0000 object(stdClass)#538 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:16 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:16 +0000 object(stdClass)#538 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:16 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:16 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:16 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:16 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:16 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:16 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:16 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:16 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:16 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:16 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:16 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:16 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:16"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "8yZhIiEMnDe0Cqh"
  ["taskpid"]=>
  int(32066)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:16 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:16 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:16"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "8yZhIiEMnDe0Cqh"
  ["tasktime"]=>
  float(0.028265953063965)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:16 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:16 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:16 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:16 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:16 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:16 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:16 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:16 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:16 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:16 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "D52PZ50TKojm3Nh"
  ["taskpid"]=>
  int(32071)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:16 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:16 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "D52PZ50TKojm3Nh"
  ["tasktime"]=>
  float(0.042235136032104)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:16 +0000 object(stdClass)#1166 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:16 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:16 +0000 object(stdClass)#1166 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:16 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:16 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:16 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:16 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:16 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:16 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:16 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:16 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:16 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:16 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:16 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:16 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:16 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:16 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "XFGstkJKEQpX00O"
  ["taskpid"]=>
  int(32076)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:16 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:16 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:16 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "XFGstkJKEQpX00O"
  ["tasktime"]=>
  float(0.028311014175415)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 int(1)
Sat, 28 Apr 2018 16:17:16 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:16 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:17 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:17 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:17 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:17 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "1qfB9UJGA4lYhMb"
  ["taskpid"]=>
  int(32081)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:17 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "1qfB9UJGA4lYhMb"
  ["tasktime"]=>
  float(0.042139053344727)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:17 +0000 object(stdClass)#1794 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:17 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:17 +0000 object(stdClass)#1794 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:17 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:17 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:17 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:17 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:17 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:17 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "rSI32wQjzWsPFzA"
  ["taskpid"]=>
  int(32086)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:17 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:17"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "rSI32wQjzWsPFzA"
  ["tasktime"]=>
  float(0.028146028518677)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:17 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:17 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:17 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:17 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "MK546tQXDnrwaFa"
  ["taskpid"]=>
  int(32091)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:17 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "MK546tQXDnrwaFa"
  ["tasktime"]=>
  float(0.042381048202515)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:17 +0000 object(stdClass)#2422 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:17 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:17 +0000 object(stdClass)#2422 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:17 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:17 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:17 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:17 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:17 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:17 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:17 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:17 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:17 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "nxZc4aCLT92mkjy"
  ["taskpid"]=>
  int(32096)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:17 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:17 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:17 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "nxZc4aCLT92mkjy"
  ["tasktime"]=>
  float(0.02817177772522)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 int(1)
Sat, 28 Apr 2018 16:17:17 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:17 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:17 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:17 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:18 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:18 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:18 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "0eOK0HpNcZi6Abo"
  ["taskpid"]=>
  int(32102)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:18 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "0eOK0HpNcZi6Abo"
  ["tasktime"]=>
  float(0.042479038238525)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:18 +0000 object(stdClass)#3050 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:18 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:18 +0000 object(stdClass)#3050 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:18 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:18 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:18 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:18 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:18 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:18 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "s2ONnAFvTeB53G6"
  ["taskpid"]=>
  int(32107)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:18 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:18"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "s2ONnAFvTeB53G6"
  ["tasktime"]=>
  float(0.029783964157104)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:18 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:18 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:18 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:18 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "tW7YhYFDr7CaUaa"
  ["taskpid"]=>
  int(32112)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:18 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "tW7YhYFDr7CaUaa"
  ["tasktime"]=>
  float(0.042230129241943)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:18 +0000 object(stdClass)#3678 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:18 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:18 +0000 object(stdClass)#3678 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:18 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:18 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:18 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:18 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:18 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:18 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:18 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:18 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:18 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "F3gnpLNAaevTec8"
  ["taskpid"]=>
  int(32117)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:18 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:18 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:18 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "F3gnpLNAaevTec8"
  ["tasktime"]=>
  float(0.029007911682129)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 int(1)
Sat, 28 Apr 2018 16:17:18 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:18 +0000 string(292) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Ping Device","taskmetadata":"","params":{
"host":"localhost"
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:18 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:18 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:19 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:19 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(14) "VP Ping Device"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:19 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:19 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:19 +0000 string(9) ""ping.pl""
Sat, 28 Apr 2018 16:17:19 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "{"host":"localhost"}"
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:19 +0000 string(1308) "{"taskname":"VP Ping Device","urlparams":"host","userparams":"","actiontext":"#\r\n# Ping a single device, bring back alive\r\n# Uses TCP Ping by default\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse Net::Ping;\r\nuse Getopt::Long;\r\nuse JSON;\r\n\r\nmy $host='';\r\nmy %output;\r\nGetOptions(\"host=s\" => \\$host);\r\n\r\n\r\nmy $p = Net::Ping->new();\r\nif ($p->ping($host)) {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'alive';\r\n} else {\r\n$output{'host'} = $host;\r\n$output{'status'} = 'unreachable';\r\n}\r\n$p->close();\r\n\r\nmy $result = encode_json(\\%output);\r\n\r\nprint $result;\r\n","actionlanguage":"perl","actionfilename":"ping.pl","taskdescription":"Synopsis:  Ping a device and get a result back.\r\n\r\nInput param:  host\r\nInput value expected:  hostname or IP address\r\n\r\nOutput param:  status\r\nOutput values:  alive, unreachable\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"host\":\"10.23.16.193\"\r\n}","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nhost, text,  true, true, Host, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:19 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:19 +0000 array(22) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "3uVwly2HbvbsROd"
  ["taskpid"]=>
  int(32122)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 int(1)
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:19 +0000 string(71) "output is "{\"status\":\"alive\",\"host\":\"localhost\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:19 +0000 array(25) {
  ["taskname"]=>
  string(14) "VP Ping Device"
  ["urlparams"]=>
  string(4) "host"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(471) "#
# Ping a single device, bring back alive
# Uses TCP Ping by default
#

use strict;
use warnings;
use Net::Ping;
use Getopt::Long;
use JSON;

my $host='';
my %output;
GetOptions("host=s" => \$host);


my $p = Net::Ping->new();
if ($p->ping($host)) {
$output{'host'} = $host;
$output{'status'} = 'alive';
} else {
$output{'host'} = $host;
$output{'status'} = 'unreachable';
}
$p->close();

my $result = encode_json(\%output);

print $result;
"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(7) "ping.pl"
  ["taskdescription"]=>
  string(259) "Synopsis:  Ping a device and get a result back.

Input param:  host
Input value expected:  hostname or IP address

Output param:  status
Output values:  alive, unreachable

Sample Params Config (fill in over on the left): 
{
"host":"10.23.16.193"
}"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(154) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
host, text,  true, true, Host, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "3uVwly2HbvbsROd"
  ["tasktime"]=>
  float(0.042119979858398)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(37) "{"status":"alive","host":"localhost"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 int(1)
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:19 +0000 object(stdClass)#4306 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:19 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:19 +0000 string(5) "alive"
Sat, 28 Apr 2018 16:17:19 +0000 string(13) "TASKOUT IS..."
Sat, 28 Apr 2018 16:17:19 +0000 object(stdClass)#4306 (2) {
  ["status"]=>
  string(5) "alive"
  ["host"]=>
  string(9) "localhost"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "PARAM IS..."
Sat, 28 Apr 2018 16:17:19 +0000 string(6) "status"
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "VALUE IS..."
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "unreachable"
Sat, 28 Apr 2018 16:17:19 +0000 string(384) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/LoopPing.txt",
"data":"Pinged localhost is alive %counter% times"
}
}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:19 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:19 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:19 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:19 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:19 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:19 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:19 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:19 +0000 string(115) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/LoopPing.txt","data":"Pinged localhost is alive %counter% times"}"
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:19 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:19 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:19 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "f1nkdSLJCpQ4GAA"
  ["taskpid"]=>
  int(32127)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 int(1)
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:19 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:19 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:19"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "f1nkdSLJCpQ4GAA"
  ["tasktime"]=>
  float(0.029977083206177)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 int(1)
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 string(389) "WORKFLOWEXECUTE FIRING /bin/curl -s -X POST -H "Content-Type: application/json" -u "admin:admin" -d'{"runbook":"WFTasks","username":"admin","taskname":"VP Write To File","taskmetadata":"","params":{
"filename":"/var/www/html/pilot/tmp/files/endedwhileloop.txt",
"data":"while loop is completed.  made it to end."
}}' https://secure.virtuops.com/pilot/app/server/api/index.php/task_run 2>&1"
Sat, 28 Apr 2018 11:17:19 -0500 string(16) "UserRead PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singleuser"]=>
  string(4) "true"
  ["username"]=>
  string(5) "admin"
}
Sat, 28 Apr 2018 11:17:19 -0500 string(19) "ReadRunbook PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singlerunbook"]=>
  string(4) "true"
  ["runbookid"]=>
  string(7) "WFTasks"
}
Sat, 28 Apr 2018 11:17:19 -0500 string(17) "ReadTasks PARAMS "
Sat, 28 Apr 2018 11:17:19 -0500 array(2) {
  ["singletask"]=>
  string(4) "true"
  ["taskname"]=>
  string(16) "VP Write To File"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(28) "... Starting nochero runtask"
Sat, 28 Apr 2018 16:17:19 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:19 +0000 string(12) "filetorun is"
Sat, 28 Apr 2018 16:17:19 +0000 string(16) ""writetofile.pl""
Sat, 28 Apr 2018 16:17:19 +0000 string(9) "params is"
Sat, 28 Apr 2018 16:17:19 +0000 string(121) "{"filename":"\/var\/www\/html\/pilot\/tmp\/files\/endedwhileloop.txt","data":"while loop is completed.  made it to end."}"
Sat, 28 Apr 2018 16:17:19 +0000 string(11) "taskdata is"
Sat, 28 Apr 2018 16:17:19 +0000 string(1709) "{"taskname":"VP Write To File","urlparams":"filename, data","userparams":"","actiontext":"#\r\n#\r\n#  Writes data to a file for later use, one line at a time.\r\n#\r\n#\r\n\r\nuse strict;\r\nuse warnings;\r\nuse JSON;\r\nuse Getopt::Long;\r\n\r\nmy $filename='';\r\nmy $data='';\r\nmy %output;\r\n\r\nGetOptions(\r\n        \"filename=s\" => \\$filename,\r\n        \"data=s\" => \\$data\r\n        );\r\n\r\nopen (FILEDATA,\"+>> $filename\") || die \"{\\\"status\\\":\\\"Cannot open or write to \".$filename.\"\\\"}\\n\";\r\n\r\nprint FILEDATA \"$data\\n\";\r\n\r\n$output{'status'} = 'saved';\r\nmy $json = encode_json(\\%output);\r\nprint $json;\r\nclose (FILEDATA);","actionlanguage":"perl","actionfilename":"writetofile.pl","taskdescription":"\"Synopsis:  Utility that writes data to a file\r\n\r\n\r\nInput param:  \r\nfilename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to \/var\/www\/html\/pilot\/tmp\/filesdata = The data you are writing into the file.  The utility adds a new line char already\r\n\r\nOutput param:  status\r\n\r\nOutput values:  saved, <error, something like Cannot write to...>\r\n\r\nSample Params Config (fill in over on the left): \r\n{\r\n\"filename\":\"\/var\/www\/html\/pilot\/tmp\/files\/cooloutput.txt\",\r\n\"data\":\"Some data or a wfv usually\"\r\n}\r\n\t","datatype":"JSON","jprop":"","fieldseparator":"","recordseparator":"","outputfields":"#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE\r\nfilename, text,  true, true, Filename, style=\"width: 300px\"\r\nstatus,  text,  false, true, Status, style=\"width: 300px\"","outputactions":"","recid":1,"username":"admin","runbookid":"WFTasks","taskmetadata":""}"
Sat, 28 Apr 2018 16:17:19 +0000 string(2) "

"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:19 +0000 array(22) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:20"
  ["taskstate"]=>
  string(6) "before"
  ["taskserial"]=>
  string(15) "HR0AN0I9gWOm5Z1"
  ["taskpid"]=>
  int(32132)
  ["taskstatus"]=>
  string(7) "RUNNING"
}
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 int(1)
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 string(21) "

success, exit is 0
"
Sat, 28 Apr 2018 16:17:19 +0000 string(48) "output is "{\"status\":\"saved\"}"
error is ""

"
Sat, 28 Apr 2018 16:17:19 +0000 string(20) "TASKMETA IN HERE????"
Sat, 28 Apr 2018 16:17:19 +0000 array(25) {
  ["taskname"]=>
  string(16) "VP Write To File"
  ["urlparams"]=>
  string(14) "filename, data"
  ["userparams"]=>
  string(0) ""
  ["actiontext"]=>
  string(501) "#
#
#  Writes data to a file for later use, one line at a time.
#
#

use strict;
use warnings;
use JSON;
use Getopt::Long;

my $filename='';
my $data='';
my %output;

GetOptions(
        "filename=s" => \$filename,
        "data=s" => \$data
        );

open (FILEDATA,"+>> $filename") || die "{\"status\":\"Cannot open or write to ".$filename."\"}\n";

print FILEDATA "$data\n";

$output{'status'} = 'saved';
my $json = encode_json(\%output);
print $json;
close (FILEDATA);"
  ["actionlanguage"]=>
  string(4) "perl"
  ["actionfilename"]=>
  string(14) "writetofile.pl"
  ["taskdescription"]=>
  string(559) ""Synopsis:  Utility that writes data to a file


Input param:  
filename = File name to write to.  MAKE SURE that the file is writable by the web server user, we recommend you write to /var/www/html/pilot/tmp/filesdata = The data you are writing into the file.  The utility adds a new line char already

Output param:  status

Output values:  saved, <error, something like Cannot write to...>

Sample Params Config (fill in over on the left): 
{
"filename":"/var/www/html/pilot/tmp/files/cooloutput.txt",
"data":"Some data or a wfv usually"
}
	"
  ["datatype"]=>
  string(4) "JSON"
  ["jprop"]=>
  string(0) ""
  ["fieldseparator"]=>
  string(0) ""
  ["recordseparator"]=>
  string(0) ""
  ["outputfields"]=>
  string(162) "#ID, TYPE, PARAM, REQUIRED, CAPTION, STYLE
filename, text,  true, true, Filename, style="width: 300px"
status,  text,  false, true, Status, style="width: 300px""
  ["outputactions"]=>
  string(0) ""
  ["recid"]=>
  int(1)
  ["username"]=>
  string(5) "admin"
  ["runbookid"]=>
  string(7) "WFTasks"
  ["taskmetadata"]=>
  string(0) ""
  ["taskstarttime"]=>
  string(19) "2018-04-28 16:17:20"
  ["taskstate"]=>
  string(5) "after"
  ["taskserial"]=>
  string(15) "HR0AN0I9gWOm5Z1"
  ["tasktime"]=>
  float(0.028133869171143)
  ["taskexit"]=>
  int(0)
  ["taskstatus"]=>
  string(7) "STOPPED"
  ["taskoutput"]=>
  string(18) "{"status":"saved"}"
  ["taskerror"]=>
  string(0) ""
}
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 int(1)
Sat, 28 Apr 2018 16:17:19 +0000 string(0) ""
Sat, 28 Apr 2018 16:17:19 +0000 string(38) "START WORKFLOW TIME IS 1524932235.7136"
Sat, 28 Apr 2018 16:17:19 +0000 string(37) "STOP WORKFLOW TIME IS 1524932239.6543"
Sat, 28 Apr 2018 16:17:19 +0000 string(38) "TOTAL WORKFLOW TIME IS 3.9406588077545"
